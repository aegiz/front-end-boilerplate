{
    "This will create a custom React Query Mutation Hook": {
        "prefix": "rqpost",
        "body": [
            "/* ",
            "\tUsage in business logic code:",
            "\timport { useQueryClient } from 'react-query';",
            "\timport queryKeys from '@services/ReactQuery/queryKeys';",
            "\timport { ${TM_FILENAME_BASE} } from '@services/ReactQuery/mutations';",
            "",
            "\tconst queryClient = useQueryClient();",
            "\tconst { status, mutate } = ${TM_FILENAME_BASE}({",
            "\t\tonSuccess: async () => {",
            "\t\t\t// trigger an immediate refresh",
            "\t\t\tawait queryClient.invalidateQueries(queryKeys.queryKey(), { refetchActive: true, refetchInactive: true });",
            "\t\t},",
            "\t});",
            "\tconst myFct = () => {",
            "\t\t mutate({ param1: 'hello', param2: 'world' });",
            "\t});",
            "*/",
            "import { api, AxiosError } from '@services/api';",
            "import { useMutation, UseMutationOptions } from 'react-query';",
            "",
            "type Parameters = {",
            "",
            "}",
            "",
            "export const ${TM_FILENAME_BASE} = ",
            "\t(options?: UseMutationOptions<unknown, AxiosError, Parameters>,",
            "): typeof ${1:my}Mutation => {",
            "\tconst ${1:my}MutationFn = async (params: Parameters) => {",
            "\t\treturn api.post(`/${2:url}`, params, {",
            "\t\t\theaders: {",
            "\t\t\t\t'Content-Type': 'you can safely remove this if you dont need extra header',",
            "\t\t\t},",
            "\t\t});",
            "\t};",
            "",
            "\tconst ${1:my}Mutation = useMutation<unknown, AxiosError, Parameters>(${1:my}MutationFn, options);",
            "",
            "\treturn ${1:my}Mutation;",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ],
        "description": "This will create a custom React Query Mutation Hook"
    }
}
